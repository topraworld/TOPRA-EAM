package org.eam.engine;

import org.compiere.model.MNote;
import org.compiere.model.MUserRoles;
import org.compiere.model.X_AD_Message;
import org.compiere.process.SvrProcess;
import org.compiere.util.Env;
import org.eam.model.MAMCalenderSchedule;
import org.eam.model.MAMMaintenance;
import org.eam.model.MAMServiceOrder;

//org.eam.engine.WFWorkOrderGen
public class WFWorkOrderGen extends SvrProcess{

	@Override
	protected void prepare() { }

	@Override
	protected String doIt() throws Exception {
		Thread t = new Thread(new WorkOrder(getRecord_ID()));
		t.start();
		return "Done!!";
	}
}

class WorkOrder implements Runnable{
	
	private int AM_CalenderSchedule_ID;
	
	protected WorkOrder(int AM_CalenderSchedule_ID){
		this.AM_CalenderSchedule_ID = AM_CalenderSchedule_ID;
	} 

	@Override
	public void run() {
		
		try {
			
			//This will create Work orders for calender schedule
			MAMCalenderSchedule cs = new MAMCalenderSchedule(Env.getCtx(), AM_CalenderSchedule_ID, null);
			
			if(cs.getAM_ServiceOrder_ID() != 0)//already generated
				return;
			
			MAMMaintenance pm = (MAMMaintenance) cs.getAM_Maintenance();
			
			//Generating work order
			MAMServiceOrder wo = new MAMServiceOrder(Env.getCtx(), 0, null);
			wo.setAM_Maintenance_ID(pm.get_ID());
			wo.setDateDoc(cs.getDateScheduled());
			wo.setM_PriceList_ID(pm.getM_PriceList_ID());
			wo.setA_Asset_ID(cs.getA_Asset_ID());
			wo.setDateStartPlan(wo.getDateDoc());
			wo.setDescription("***System process - generated by the PM action schedule***");
			wo.setAM_CalenderSchedule_ID(AM_CalenderSchedule_ID);
			wo.save();
			wo.prepareIt(); //just to copy pm schedule >> wo schedule 
			
			cs.setAM_ServiceOrder_ID(wo.get_ID());
			cs.save();
			
			X_AD_Message message = new X_AD_Message(Env.getCtx(), 0, null);
			message.setMsgType(X_AD_Message.MSGTYPE_Information);
			message.setMsgText("New Work order is generated - Document no : " + wo.getDocumentNo());
			message.save();
			//Generate notification
			//Communication & Notification
			if(pm.getAD_User_ID() > 0) {
				
				MNote note = new MNote(Env.getCtx(), 0, null);
				note.setAD_Message_ID(message.get_ID());
				note.setAD_User_ID(pm.getAD_User_ID());
				note.setAD_Table_ID(wo.get_Table_ID());
				note.setRecord_ID(wo.get_ID());
				note.setReference("Work Order");
				note.setTextMsg(message.getMsgText());
				note.save();
			}
			
			//Communication & Notification
			if(pm.getAD_Role_ID() > 0) {
				
				//AD_User_Roles
				MUserRoles roles [] = MUserRoles.getOfRole(Env.getCtx(), pm.getAD_Role_ID());
				MNote note = null;
				
				for (MUserRoles role : roles) {
				
					if(pm.getAD_User_ID() == role.getAD_User_ID()) {
						continue;
					}
					note = new MNote(Env.getCtx(), 0, null);
					note.setAD_Message_ID(message.get_ID());
					note.setAD_User_ID(role.getAD_User_ID());
					note.setAD_Table_ID(wo.get_Table_ID());
					note.setRecord_ID(wo.get_ID());
					note.setReference("Work Order");
					note.setTextMsg(message.getMsgText());
					note.save();
				}
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
} 
